require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _ = require('../../..');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('e2e android tools', function () {
  this.timeout(300000);
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('launch emu', function callee$1$0() {
    var emu;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          emu = undefined;
          context$2$0.prev = 1;

          emu = new _.AndroidEmulator('NEXUS_S_18_X86');
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(_bluebird2['default'].resolve(emu.start()));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(emu.waitTillReady());

        case 7:
          context$2$0.prev = 7;

          if (emu) {
            emu.stop();
          }
          return context$2$0.finish(7);

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[1,, 7, 10]]);
  });

  it('killAll', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.androidTools.killAll());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_.androidTools.killAll('ls'));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(_.androidTools.killAll(['ls', 'echo']));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2FuZHJvaWQvYW5kcm9pZC10b29sLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztnQkFFOEMsVUFBVTs7b0JBQ3ZDLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O3dCQUMvQixVQUFVOzs7O0FBR3hCLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLG1CQUFtQixFQUFFLFlBQVk7QUFDeEMsTUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQixRQUFNLENBQUM7Ozs7Ozs7O0dBQ04sQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxZQUFZLEVBQUU7UUFDWCxHQUFHOzs7O0FBQUgsYUFBRzs7O0FBRUwsYUFBRyxHQUFHLHNCQUFvQixnQkFBZ0IsQ0FBQyxDQUFDOzsyQ0FDdEMsc0JBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7OzsyQ0FDdEIsR0FBRyxDQUFDLGFBQWEsRUFBRTs7Ozs7QUFFekIsY0FBSSxHQUFHLEVBQUU7QUFDUCxlQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7V0FDWjs7Ozs7Ozs7R0FFSixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLFNBQVMsRUFBRTs7Ozs7MkNBQ04sZUFBYSxPQUFPLEVBQUU7Ozs7MkNBQ3RCLGVBQWEsT0FBTyxDQUFDLElBQUksQ0FBQzs7OzsyQ0FDMUIsZUFBYSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7Ozs7Ozs7R0FDM0MsQ0FBQyxDQUFDOztBQUVILE9BQUssQ0FBQzs7Ozs7Ozs7R0FDTCxDQUFDLENBQUM7Q0FFSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvYW5kcm9pZC9hbmRyb2lkLXRvb2wtZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1vY2hhXG5cbmltcG9ydCB7IEFuZHJvaWRFbXVsYXRvciwgYW5kcm9pZFRvb2xzIH0gZnJvbSAnLi4vLi4vLi4nO1xuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2UyZSBhbmRyb2lkIHRvb2xzJywgZnVuY3Rpb24gKCkge1xuICB0aGlzLnRpbWVvdXQoMzAwMDAwKTtcbiAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgfSk7XG5cbiAgaXQoJ2xhdW5jaCBlbXUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGVtdTtcbiAgICB0cnkge1xuICAgICAgZW11ID0gbmV3IEFuZHJvaWRFbXVsYXRvcignTkVYVVNfU18xOF9YODYnKTtcbiAgICAgIGF3YWl0IEIucmVzb2x2ZShlbXUuc3RhcnQoKSk7XG4gICAgICBhd2FpdCBlbXUud2FpdFRpbGxSZWFkeSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoZW11KSB7XG4gICAgICAgIGVtdS5zdG9wKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBpdCgna2lsbEFsbCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbCgpO1xuICAgIGF3YWl0IGFuZHJvaWRUb29scy5raWxsQWxsKCdscycpO1xuICAgIGF3YWl0IGFuZHJvaWRUb29scy5raWxsQWxsKFsnbHMnLCAnZWNobyddKTtcbiAgfSk7XG5cbiAgYWZ0ZXIoYXN5bmMgZnVuY3Rpb24gKCkge1xuICB9KTtcblxufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
