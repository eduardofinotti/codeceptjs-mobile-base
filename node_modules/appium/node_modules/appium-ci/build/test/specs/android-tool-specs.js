require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _ = require('../..');

var _libUtils = require('../../lib/utils');

var _libUtils2 = _interopRequireDefault(_libUtils);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('android tools', function () {
  before(function callee$1$0() {
    var _spawn, _exec;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          _spawn = _libUtils2['default'].spawn;
          _exec = _libUtils2['default'].exec;

          _sinon2['default'].stub(_libUtils2['default'], "spawn").callsFake(function () {
            return _spawn('sleep', ['300']);
          });
          _sinon2['default'].stub(_libUtils2['default'], "exec").callsFake(function () {
            return _exec('echo 1');
          });

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('launch emu', function callee$1$0() {
    var emu;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          emu = undefined;
          context$2$0.prev = 1;

          emu = new _.AndroidEmulator('myavd', { initWait: 500 });
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(emu.start());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(emu.waitTillReady());

        case 7:
          context$2$0.prev = 7;

          if (emu) {
            emu.stop();
          }
          return context$2$0.finish(7);

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[1,, 7, 10]]);
  });

  it('killAll', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.androidTools.killAll());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_.androidTools.killAll('ls'));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(_.androidTools.killAll(['ls', 'echo']));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          _libUtils2['default'].spawn.restore();
          _libUtils2['default'].exec.restore();

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Qvc3BlY3MvYW5kcm9pZC10b29sLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2dCQUU4QyxPQUFPOzt3QkFDbkMsaUJBQWlCOzs7O29CQUNsQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztxQkFDM0IsT0FBTzs7OztBQUV6QixrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBWTtBQUNwQyxRQUFNLENBQUM7UUFDRCxNQUFNLEVBQ04sS0FBSzs7Ozs7QUFETCxnQkFBTSxHQUFHLHNCQUFNLEtBQUs7QUFDcEIsZUFBSyxHQUFHLHNCQUFNLElBQUk7O0FBRXRCLDZCQUFNLElBQUksd0JBQVEsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLFlBQVk7QUFDL0MsbUJBQU8sTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7V0FDakMsQ0FBQyxDQUFDO0FBQ0gsNkJBQU0sSUFBSSx3QkFBUSxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsWUFBWTtBQUM5QyxtQkFBTyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7V0FDeEIsQ0FBQyxDQUFDOzs7Ozs7O0dBQ0osQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxZQUFZLEVBQUU7UUFDWCxHQUFHOzs7O0FBQUgsYUFBRzs7O0FBRUwsYUFBRyxHQUFHLHNCQUFvQixPQUFPLEVBQUUsRUFBQyxRQUFRLEVBQUUsR0FBRyxFQUFDLENBQUMsQ0FBQzs7MkNBQzlDLEdBQUcsQ0FBQyxLQUFLLEVBQUU7Ozs7MkNBQ1gsR0FBRyxDQUFDLGFBQWEsRUFBRTs7Ozs7QUFFekIsY0FBSSxHQUFHLEVBQUU7QUFDUCxlQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7V0FDWjs7Ozs7Ozs7R0FFSixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLFNBQVMsRUFBRTs7Ozs7MkNBQ04sZUFBYSxPQUFPLEVBQUU7Ozs7MkNBQ3RCLGVBQWEsT0FBTyxDQUFDLElBQUksQ0FBQzs7OzsyQ0FDMUIsZUFBYSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7Ozs7Ozs7R0FDM0MsQ0FBQyxDQUFDOztBQUVILE9BQUssQ0FBQzs7OztBQUNKLGdDQUFNLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUN0QixnQ0FBTSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7Ozs7Ozs7R0FDdEIsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3Qvc3BlY3MvYW5kcm9pZC10b29sLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1vY2hhXG5cbmltcG9ydCB7IEFuZHJvaWRFbXVsYXRvciwgYW5kcm9pZFRvb2xzIH0gZnJvbSAnLi4vLi4nO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL2xpYi91dGlscyc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBzaW5vbiBmcm9tICdzaW5vbic7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdhbmRyb2lkIHRvb2xzJywgZnVuY3Rpb24gKCkge1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBfc3Bhd24gPSB1dGlscy5zcGF3bjtcbiAgICBsZXQgX2V4ZWMgPSB1dGlscy5leGVjO1xuXG4gICAgc2lub24uc3R1Yih1dGlscywgXCJzcGF3blwiKS5jYWxsc0Zha2UoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF9zcGF3bignc2xlZXAnLCBbJzMwMCddKTtcbiAgICB9KTtcbiAgICBzaW5vbi5zdHViKHV0aWxzLCBcImV4ZWNcIikuY2FsbHNGYWtlKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfZXhlYygnZWNobyAxJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdsYXVuY2ggZW11JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbXU7XG4gICAgdHJ5IHtcbiAgICAgIGVtdSA9IG5ldyBBbmRyb2lkRW11bGF0b3IoJ215YXZkJywge2luaXRXYWl0OiA1MDB9KTtcbiAgICAgIGF3YWl0IGVtdS5zdGFydCgpO1xuICAgICAgYXdhaXQgZW11LndhaXRUaWxsUmVhZHkoKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGVtdSkge1xuICAgICAgICBlbXUuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaXQoJ2tpbGxBbGwnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgYW5kcm9pZFRvb2xzLmtpbGxBbGwoKTtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbCgnbHMnKTtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbChbJ2xzJywgJ2VjaG8nXSk7XG4gIH0pO1xuXG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICB1dGlscy5zcGF3bi5yZXN0b3JlKCk7XG4gICAgdXRpbHMuZXhlYy5yZXN0b3JlKCk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
