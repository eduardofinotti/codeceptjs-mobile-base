'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var _asyncbox = require('asyncbox');

var commands = {},
    extensions = {};

commands.getAttribute = function callee$0$0(attribute, elementId) {
  var params;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAutomationId(elementId));

      case 2:
        elementId = context$1$0.sent;
        params = { attribute: attribute, elementId: elementId };
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction("element:getAttribute", params));

      case 6:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setAttribute = function callee$0$0(attribute, value, elementId) {
  var params;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAutomationId(elementId));

      case 2:
        elementId = context$1$0.sent;
        params = { attribute: attribute, value: value, elementId: elementId };
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction("element:setAttribute", params));

      case 6:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocation = function callee$0$0(elementId) {
  var location;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAutomationId(elementId));

      case 2:
        elementId = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction("element:getLocation", { elementId: elementId }));

      case 5:
        location = context$1$0.sent;

        location.x = location.centerx;
        location.y = location.centery;
        return context$1$0.abrupt('return', { "x": location.centerx, "y": location.centery });

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocationInView = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getLocation(elementId));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getLocationValueByElementId = function callee$0$0(elementId) {
  var location;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getLocation(elementId));

      case 2:
        location = context$1$0.sent;
        return context$1$0.abrupt('return', [location.x, location.y]);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getText = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAutomationId(elementId));

      case 2:
        elementId = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction("element:getText", { elementId: elementId }));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementEnabled = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAttribute("enabled", elementId));

      case 2:
        context$1$0.t0 = context$1$0.sent;
        return context$1$0.abrupt('return', context$1$0.t0 === 'true');

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementDisplayed = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAttribute("displayed", elementId));

      case 2:
        context$1$0.t0 = context$1$0.sent;
        return context$1$0.abrupt('return', context$1$0.t0 === 'true');

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.elementSelected = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info('elementSelcted not supported');
        return context$1$0.abrupt('return', false);

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getSize = function callee$0$0(elementId) {
  var location;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getAutomationId(elementId));

      case 2:
        elementId = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction("element:getLocation", { elementId: elementId }));

      case 5:
        location = context$1$0.sent;
        return context$1$0.abrupt('return', { "width": location.width, "height": location.height });

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValue = function callee$0$0(keys, elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        keys = keys.join();
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.setAttribute('Text', keys, elementId));

      case 3:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setValueImmediate = function callee$0$0(keys, elementId) {
  var text;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        text = keys;

        if (keys instanceof Array) {
          text = keys.join("");
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.click(elementId));

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap((0, _asyncbox.sleep)(3000));

      case 6:
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.inputText(text));

      case 8:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.clear = function callee$0$0(elementId) {
  var text, length;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getText(elementId));

      case 2:
        context$1$0.t0 = context$1$0.sent;

        if (context$1$0.t0) {
          context$1$0.next = 5;
          break;
        }

        context$1$0.t0 = '';

      case 5:
        text = context$1$0.t0;
        length = text.length;

        if (!(length === 0)) {
          context$1$0.next = 11;
          break;
        }

        return context$1$0.abrupt('return', true);

      case 11:
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap(this.setAttribute('Text', '', elementId));

      case 13:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.replaceValue = function callee$0$0(value, elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.setAttribute('Text', value, elementId));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.click = function callee$0$0(elementId) {
  var location;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.getLocationValueByElementId(elementId));

      case 2:
        location = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("click", location));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.touchUp = function callee$0$0() {
  var x = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];
  var y = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];
  var elementId = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

  var _location;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (elementId === this.sessionId) {
          elementId = null;
        }

        if (!elementId) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getLocationValueByElementId(elementId));

      case 4:
        _location = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchUp", _location));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchUp", [x, y]));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.touchDown = function callee$0$0(x, y) {
  var elementId = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

  var _location2;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (elementId === this.sessionId) {
          elementId = null;
        }

        if (!elementId) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getLocationValueByElementId(elementId));

      case 4:
        _location2 = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchDown", _location2));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchDown", [x, y]));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.touchMove = function callee$0$0(x, y) {
  var elementId = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

  var _location3;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (elementId === this.sessionId) {
          elementId = null;
        }

        if (!elementId) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getLocationValueByElementId(elementId));

      case 4:
        _location3 = context$1$0.sent;
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchMove", _location3));

      case 7:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchMove", [x, y]));

      case 12:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.touchLongClick = function callee$0$0(elementId, x, y, duration) {
  var _location4;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (elementId === this.sessionId) {
          elementId = null;
        }

        if (!elementId) {
          context$1$0.next = 11;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getLocationValueByElementId(elementId));

      case 4:
        _location4 = context$1$0.sent;

        _location4.push(duration);
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchLongClick", _location4));

      case 8:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 11:
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("touchLongClick", [x, y, duration]));

      case 13:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.tap = function callee$0$0(elementId) {
  var x = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
  var y = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
  var count = arguments.length <= 3 || arguments[3] === undefined ? 1 : arguments[3];
  var result, i, tapResult;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        result = true;
        i = 0;

      case 2:
        if (!(i < count)) {
          context$1$0.next = 17;
          break;
        }

        if (!elementId) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.click(elementId));

      case 6:
        tapResult = context$1$0.sent;

        if (!tapResult) {
          result = false;
        }
        context$1$0.next = 14;
        break;

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("click", [x, y]));

      case 12:
        tapResult = context$1$0.sent;

        if (!tapResult) {
          result = false;
        }

      case 14:
        i++;
        context$1$0.next = 2;
        break;

      case 17:
        return context$1$0.abrupt('return', result);

      case 18:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands);
exports.commands = commands;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
