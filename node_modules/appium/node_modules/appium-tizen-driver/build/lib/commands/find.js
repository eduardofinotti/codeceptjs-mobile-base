'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var helpers = {},
    extensions = {};

var elements = {};
var index = 0;

helpers.doFindElementOrEls = function callee$0$0(params) {
  var elementId, result;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        elementId = { "elementId": params.selector };
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.bootstrap.sendAction('find', elementId));

      case 3:
        result = context$1$0.sent;

        if (!result) {
          context$1$0.next = 8;
          break;
        }

        index++;
        elements[index] = params.selector;
        return context$1$0.abrupt('return', { "ELEMENT": '' + index });

      case 8:
        return context$1$0.abrupt('return', { "ELEMENT": "-1" });

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.findElOrEls = function callee$0$0(strategy, selector, mult) {
  var context = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];

  var params, element, doFind, _elements;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.validateLocatorStrategy(strategy);

        if (selector) {
          context$1$0.next = 3;
          break;
        }

        throw new Error("Must provide a selector when finding elements");

      case 3:
        params = {
          strategy: strategy,
          selector: selector,
          context: context,
          multiple: mult
        };
        element = undefined;

        doFind = function doFind() {
          return _regeneratorRuntime.async(function doFind$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.prev = 0;
                context$2$0.next = 3;
                return _regeneratorRuntime.awrap(this.doFindElementOrEls(params));

              case 3:
                element = context$2$0.sent;
                context$2$0.next = 11;
                break;

              case 6:
                context$2$0.prev = 6;
                context$2$0.t0 = context$2$0['catch'](0);

                if (!(context$2$0.t0.message && context$2$0.t0.message.match(/An element could not be located/))) {
                  context$2$0.next = 10;
                  break;
                }

                return context$2$0.abrupt('return', false);

              case 10:
                throw context$2$0.t0;

              case 11:
                return context$2$0.abrupt('return', !_lodash2['default'].isEmpty(element));

              case 12:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this, [[0, 6]]);
        };

        context$1$0.prev = 6;
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(this.implicitWaitForCondition(doFind));

      case 9:
        context$1$0.next = 18;
        break;

      case 11:
        context$1$0.prev = 11;
        context$1$0.t0 = context$1$0['catch'](6);

        if (!(context$1$0.t0.message && context$1$0.t0.message.match(/Condition unmet/))) {
          context$1$0.next = 17;
          break;
        }

        element = [];
        context$1$0.next = 18;
        break;

      case 17:
        throw context$1$0.t0;

      case 18:
        if (_lodash2['default'].isEmpty(element)) {
          context$1$0.next = 28;
          break;
        }

        if (!mult) {
          context$1$0.next = 25;
          break;
        }

        _elements = [];

        _elements.push(element);
        return context$1$0.abrupt('return', _elements);

      case 25:
        return context$1$0.abrupt('return', element);

      case 26:
        context$1$0.next = 29;
        break;

      case 28:
        throw new _appiumBaseDriver.errors.NoSuchElementError();

      case 29:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[6, 11]]);
};

helpers.getAutomationId = function callee$0$0(elementId) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', elements[elementId]);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, helpers);
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7O2dDQUNDLG9CQUFvQjs7QUFHM0MsSUFBSSxPQUFPLEdBQUcsRUFBRTtJQUFFLFVBQVUsR0FBRyxFQUFFLENBQUM7O0FBRWxDLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNsQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7O0FBRWQsT0FBTyxDQUFDLGtCQUFrQixHQUFHLG9CQUFnQixNQUFNO01BQzdDLFNBQVMsRUFDVCxNQUFNOzs7O0FBRE4saUJBQVMsR0FBRyxFQUFFLFdBQVcsRUFBRyxNQUFNLENBQUMsUUFBUSxFQUFFOzt5Q0FDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQzs7O0FBQTNELGNBQU07O2FBRU4sTUFBTTs7Ozs7QUFDUixhQUFLLEVBQUUsQ0FBQztBQUNSLGdCQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQzs0Q0FDM0IsRUFBRSxTQUFTLE9BQUssS0FBSyxBQUFFLEVBQUU7Ozs0Q0FFM0IsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFOzs7Ozs7O0NBQzNCLENBQUM7O0FBRUYsT0FBTyxDQUFDLFdBQVcsR0FBRyxvQkFBZ0IsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJO01BQUUsT0FBTyx5REFBRyxFQUFFOztNQU90RSxNQUFNLEVBT04sT0FBTyxFQUNQLE1BQU0sRUF5QkYsU0FBUTs7Ozs7OztBQXZDaEIsWUFBSSxDQUFDLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxDQUFDOztZQUVsQyxRQUFROzs7OztjQUNMLElBQUksS0FBSyxDQUFDLCtDQUErQyxDQUFDOzs7QUFHOUQsY0FBTSxHQUFHO0FBQ1gsa0JBQVEsRUFBUixRQUFRO0FBQ1Isa0JBQVEsRUFBUixRQUFRO0FBQ1IsaUJBQU8sRUFBUCxPQUFPO0FBQ1Asa0JBQVEsRUFBRSxJQUFJO1NBQ2Y7QUFFRyxlQUFPOztBQUNQLGNBQU0sR0FBRyxTQUFULE1BQU07Ozs7OztpREFFVSxJQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDOzs7QUFBL0MsdUJBQU87Ozs7Ozs7O3NCQUVILGVBQUksT0FBTyxJQUFJLGVBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFBOzs7OztvREFDOUQsS0FBSzs7Ozs7O29EQUtULENBQUMsb0JBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7Ozs7OztTQUMzQjs7Ozt5Q0FHTyxJQUFJLENBQUMsd0JBQXdCLENBQUMsTUFBTSxDQUFDOzs7Ozs7Ozs7O2NBRXZDLGVBQUksT0FBTyxJQUFJLGVBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBOzs7OztBQUNyRCxlQUFPLEdBQUcsRUFBRSxDQUFDOzs7Ozs7OztZQU1aLG9CQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUM7Ozs7O2FBQ2pCLElBQUk7Ozs7O0FBQ0YsaUJBQVEsR0FBRyxFQUFFOztBQUNqQixpQkFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzs0Q0FDaEIsU0FBUTs7OzRDQUVSLE9BQU87Ozs7Ozs7Y0FHVixJQUFJLHlCQUFPLGtCQUFrQixFQUFFOzs7Ozs7O0NBRXhDLENBQUM7O0FBRUYsT0FBTyxDQUFDLGVBQWUsR0FBRyxvQkFBZ0IsU0FBUzs7Ozs0Q0FDMUMsUUFBUSxDQUFDLFNBQVMsQ0FBQzs7Ozs7OztDQUMzQixDQUFDOztBQUVGLGVBQWMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLE9BQU8sR0FBUCxPQUFPO3FCQUNELFVBQVUiLCJmaWxlIjoibGliL2NvbW1hbmRzL2ZpbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgZXJyb3JzIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcblxuXG5sZXQgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbmxldCBlbGVtZW50cyA9IHt9O1xubGV0IGluZGV4ID0gMDtcblxuaGVscGVycy5kb0ZpbmRFbGVtZW50T3JFbHMgPSBhc3luYyBmdW5jdGlvbiAocGFyYW1zKSB7XG4gIGxldCBlbGVtZW50SWQgPSB7IFwiZWxlbWVudElkXCIgOiBwYXJhbXMuc2VsZWN0b3IgfTtcbiAgbGV0IHJlc3VsdCA9IGF3YWl0IHRoaXMuYm9vdHN0cmFwLnNlbmRBY3Rpb24oJ2ZpbmQnLCBlbGVtZW50SWQpO1xuXG4gIGlmIChyZXN1bHQpIHtcbiAgICBpbmRleCsrO1xuICAgIGVsZW1lbnRzW2luZGV4XSA9IHBhcmFtcy5zZWxlY3RvcjtcbiAgICByZXR1cm4geyBcIkVMRU1FTlRcIjogYCR7aW5kZXh9YCB9O1xuICB9XG4gIHJldHVybiB7IFwiRUxFTUVOVFwiOiBcIi0xXCIgfTtcbn07XG5cbmhlbHBlcnMuZmluZEVsT3JFbHMgPSBhc3luYyBmdW5jdGlvbiAoc3RyYXRlZ3ksIHNlbGVjdG9yLCBtdWx0LCBjb250ZXh0ID0gJycpIHtcbiAgdGhpcy52YWxpZGF0ZUxvY2F0b3JTdHJhdGVneShzdHJhdGVneSk7XG5cbiAgaWYgKCFzZWxlY3Rvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk11c3QgcHJvdmlkZSBhIHNlbGVjdG9yIHdoZW4gZmluZGluZyBlbGVtZW50c1wiKTtcbiAgfVxuXG4gIGxldCBwYXJhbXMgPSB7XG4gICAgc3RyYXRlZ3ksXG4gICAgc2VsZWN0b3IsXG4gICAgY29udGV4dCxcbiAgICBtdWx0aXBsZTogbXVsdFxuICB9O1xuXG4gIGxldCBlbGVtZW50O1xuICBsZXQgZG9GaW5kID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBlbGVtZW50ID0gYXdhaXQgdGhpcy5kb0ZpbmRFbGVtZW50T3JFbHMocGFyYW1zKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGlmIChlcnIubWVzc2FnZSAmJiBlcnIubWVzc2FnZS5tYXRjaCgvQW4gZWxlbWVudCBjb3VsZCBub3QgYmUgbG9jYXRlZC8pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHRocm93IGVycjtcbiAgICB9XG5cbiAgICByZXR1cm4gIV8uaXNFbXB0eShlbGVtZW50KTtcbiAgfTtcblxuICB0cnkge1xuICAgIGF3YWl0IHRoaXMuaW1wbGljaXRXYWl0Rm9yQ29uZGl0aW9uKGRvRmluZCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChlcnIubWVzc2FnZSAmJiBlcnIubWVzc2FnZS5tYXRjaCgvQ29uZGl0aW9uIHVubWV0LykpIHtcbiAgICAgIGVsZW1lbnQgPSBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgfVxuXG4gIGlmICghXy5pc0VtcHR5KGVsZW1lbnQpKSB7XG4gICAgaWYgKG11bHQpIHtcbiAgICAgIGxldCBlbGVtZW50cyA9IFtdO1xuICAgICAgZWxlbWVudHMucHVzaChlbGVtZW50KTtcbiAgICAgIHJldHVybiBlbGVtZW50cztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBlcnJvcnMuTm9TdWNoRWxlbWVudEVycm9yKCk7XG4gIH1cbn07XG5cbmhlbHBlcnMuZ2V0QXV0b21hdGlvbklkID0gYXN5bmMgZnVuY3Rpb24gKGVsZW1lbnRJZCkge1xuICByZXR1cm4gZWxlbWVudHNbZWxlbWVudElkXTtcbn07XG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgaGVscGVycyk7XG5leHBvcnQgeyBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
