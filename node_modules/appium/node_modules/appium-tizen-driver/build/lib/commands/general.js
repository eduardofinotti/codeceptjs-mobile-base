'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var commands = {},
    helpers = {},
    extensions = {};

commands.getDeviceTime = function callee$0$0() {
  var out;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info('Attempting to capture tizen device date and time');
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.sdb.shell(['date']));

      case 4:
        out = context$1$0.sent;
        return context$1$0.abrupt('return', out.trim());

      case 8:
        context$1$0.prev = 8;
        context$1$0.t0 = context$1$0['catch'](1);

        _logger2['default'].errorAndThrow('Could not capture device date and time: ' + context$1$0.t0);

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 8]]);
};

commands.inputText = function callee$0$0(text) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction("inputText", [text]));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.pressHardwareKey = function callee$0$0(keyCode) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction('pressHardwareKey', [keyCode]));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.back = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.bootstrap.sendInputAction('back'));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.installApp = function callee$0$0(tpk) {
  var rootDir, tpkPath, fullPath;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        rootDir = _path2['default'].resolve(__dirname, '..', '..', '..');
        tpkPath = _path2['default'].resolve(rootDir, 'app');
        fullPath = _path2['default'].resolve(tpkPath, tpk);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(fullPath));

      case 5:
        if (context$1$0.sent) {
          context$1$0.next = 8;
          break;
        }

        _logger2['default'].errorAndThrow('Could not find app tpk at ' + tpk);
        return context$1$0.abrupt('return', false);

      case 8:
        return context$1$0.abrupt('return', this.sdb.install(fullPath));

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.removeApp = function (appPackage) {
  return this.sdb.uninstall(appPackage);
};

commands.isAppInstalled = function (appPackage) {
  return this.sdb.isAppInstalled(appPackage);
};

commands.launchApp = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.startApp());

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.startApp = function callee$0$0() {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.sdb.startApp(this.opts.appPackage, opts));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.closeApp = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.sdb.forceStop(this.opts.appPackage));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.isStartedApp = function callee$0$0() {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.sdb.isStartedApp(this.opts.appPackage, opts));

      case 2:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBZ0IsV0FBVzs7Ozs2QkFDUixnQkFBZ0I7O29CQUNsQixNQUFNOzs7O0FBRXZCLElBQUksUUFBUSxHQUFHLEVBQUU7SUFBRSxPQUFPLEdBQUcsRUFBRTtJQUFFLFVBQVUsR0FBRyxFQUFFLENBQUM7O0FBRWpELFFBQVEsQ0FBQyxhQUFhLEdBQUc7TUFHakIsR0FBRzs7OztBQUZULDRCQUFJLElBQUksQ0FBQyxrREFBa0QsQ0FBQyxDQUFDOzs7eUNBRTNDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7OztBQUFwQyxXQUFHOzRDQUNBLEdBQUcsQ0FBQyxJQUFJLEVBQUU7Ozs7OztBQUVqQiw0QkFBSSxhQUFhLDZEQUFrRCxDQUFDOzs7Ozs7O0NBRXZFLENBQUM7O0FBRUYsUUFBUSxDQUFDLFNBQVMsR0FBRyxvQkFBZ0IsSUFBSTs7Ozs7eUNBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7Ozs7Ozs7O0NBQ2pFLENBQUM7O0FBRUYsUUFBUSxDQUFDLGdCQUFnQixHQUFHLG9CQUFnQixPQUFPOzs7Ozt5Q0FDcEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7Ozs7Ozs7OztDQUMzRSxDQUFDOztBQUVGLFFBQVEsQ0FBQyxJQUFJLEdBQUc7Ozs7O3lDQUNELElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQzs7Ozs7Ozs7OztDQUNwRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxVQUFVLEdBQUcsb0JBQWdCLEdBQUc7TUFDakMsT0FBTyxFQUNQLE9BQU8sRUFFVCxRQUFROzs7O0FBSE4sZUFBTyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7QUFDbkQsZUFBTyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO0FBRXhDLGdCQUFRLEdBQUcsa0JBQUssT0FBTyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUM7O3lDQUM3QixrQkFBRyxNQUFNLENBQUMsUUFBUSxDQUFDOzs7Ozs7OztBQUM3Qiw0QkFBSSxhQUFhLGdDQUE4QixHQUFHLENBQUcsQ0FBQzs0Q0FDL0MsS0FBSzs7OzRDQUVQLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7Ozs7OztDQUNsQyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxTQUFTLEdBQUcsVUFBVSxVQUFVLEVBQUU7QUFDekMsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztDQUN2QyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxjQUFjLEdBQUcsVUFBVSxVQUFVLEVBQUU7QUFDOUMsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQztDQUM1QyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxTQUFTLEdBQUc7Ozs7O3lDQUNOLElBQUksQ0FBQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Q0FDN0IsQ0FBQzs7QUFFRixRQUFRLENBQUMsUUFBUSxHQUFHO01BQWdCLElBQUkseURBQUcsRUFBRTs7Ozs7eUNBQzlCLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQzs7Ozs7Ozs7OztDQUMzRCxDQUFDOztBQUVGLFFBQVEsQ0FBQyxRQUFRLEdBQUc7Ozs7O3lDQUNaLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDOzs7Ozs7O0NBQy9DLENBQUM7O0FBRUYsUUFBUSxDQUFDLFlBQVksR0FBRztNQUFnQixJQUFJLHlEQUFHLEVBQUU7Ozs7O3lDQUNsQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUM7Ozs7Ozs7Ozs7Q0FDL0QsQ0FBQzs7QUFFRixlQUFjLFVBQVUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDcEMsUUFBUSxHQUFSLFFBQVE7UUFBRSxPQUFPLEdBQVAsT0FBTztxQkFDWCxVQUFVIiwiZmlsZSI6ImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZyBmcm9tICcuLi9sb2dnZXInO1xuaW1wb3J0IHsgZnMgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxubGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5jb21tYW5kcy5nZXREZXZpY2VUaW1lID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICBsb2cuaW5mbygnQXR0ZW1wdGluZyB0byBjYXB0dXJlIHRpemVuIGRldmljZSBkYXRlIGFuZCB0aW1lJyk7XG4gIHRyeSB7XG4gICAgbGV0IG91dCA9IGF3YWl0IHRoaXMuc2RiLnNoZWxsKFsnZGF0ZSddKTtcbiAgICByZXR1cm4gb3V0LnRyaW0oKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbG9nLmVycm9yQW5kVGhyb3coYENvdWxkIG5vdCBjYXB0dXJlIGRldmljZSBkYXRlIGFuZCB0aW1lOiAke2Vycn1gKTtcbiAgfVxufTtcblxuY29tbWFuZHMuaW5wdXRUZXh0ID0gYXN5bmMgZnVuY3Rpb24gKHRleHQpIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuYm9vdHN0cmFwLnNlbmRJbnB1dEFjdGlvbihcImlucHV0VGV4dFwiLCBbdGV4dF0pO1xufTtcblxuY29tbWFuZHMucHJlc3NIYXJkd2FyZUtleSA9IGFzeW5jIGZ1bmN0aW9uIChrZXlDb2RlKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLmJvb3RzdHJhcC5zZW5kSW5wdXRBY3Rpb24oJ3ByZXNzSGFyZHdhcmVLZXknLCBba2V5Q29kZV0pO1xufTtcblxuY29tbWFuZHMuYmFjayA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuYm9vdHN0cmFwLnNlbmRJbnB1dEFjdGlvbignYmFjaycpO1xufTtcblxuY29tbWFuZHMuaW5zdGFsbEFwcCA9IGFzeW5jIGZ1bmN0aW9uICh0cGspIHtcbiAgY29uc3Qgcm9vdERpciA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICcuLicpO1xuICBjb25zdCB0cGtQYXRoID0gcGF0aC5yZXNvbHZlKHJvb3REaXIsICdhcHAnKTtcblxuICBsZXQgZnVsbFBhdGggPSBwYXRoLnJlc29sdmUodHBrUGF0aCwgdHBrKTtcbiAgaWYgKCEoYXdhaXQgZnMuZXhpc3RzKGZ1bGxQYXRoKSkpIHtcbiAgICBsb2cuZXJyb3JBbmRUaHJvdyhgQ291bGQgbm90IGZpbmQgYXBwIHRwayBhdCAke3Rwa31gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRoaXMuc2RiLmluc3RhbGwoZnVsbFBhdGgpO1xufTtcblxuY29tbWFuZHMucmVtb3ZlQXBwID0gZnVuY3Rpb24gKGFwcFBhY2thZ2UpIHtcbiAgcmV0dXJuIHRoaXMuc2RiLnVuaW5zdGFsbChhcHBQYWNrYWdlKTtcbn07XG5cbmNvbW1hbmRzLmlzQXBwSW5zdGFsbGVkID0gZnVuY3Rpb24gKGFwcFBhY2thZ2UpIHtcbiAgcmV0dXJuIHRoaXMuc2RiLmlzQXBwSW5zdGFsbGVkKGFwcFBhY2thZ2UpO1xufTtcblxuY29tbWFuZHMubGF1bmNoQXBwID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gYXdhaXQgdGhpcy5zdGFydEFwcCgpO1xufTtcblxuY29tbWFuZHMuc3RhcnRBcHAgPSBhc3luYyBmdW5jdGlvbiAob3B0cyA9IHt9KSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLnNkYi5zdGFydEFwcCh0aGlzLm9wdHMuYXBwUGFja2FnZSwgb3B0cyk7XG59O1xuXG5jb21tYW5kcy5jbG9zZUFwcCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgYXdhaXQgdGhpcy5zZGIuZm9yY2VTdG9wKHRoaXMub3B0cy5hcHBQYWNrYWdlKTtcbn07XG5cbmNvbW1hbmRzLmlzU3RhcnRlZEFwcCA9IGFzeW5jIGZ1bmN0aW9uIChvcHRzID0ge30pIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuc2RiLmlzU3RhcnRlZEFwcCh0aGlzLm9wdHMuYXBwUGFja2FnZSwgb3B0cyk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
