'use strict';

var _extends = require('babel-runtime/helpers/extends')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

var _helpersSession = require('./helpers/session');

var _desired = require('./desired');

var _ = require('../..');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('EspressoDriver', function () {
  var driver = undefined;
  var server = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _.startServer)(_helpersSession.PORT, _helpersSession.HOST));

        case 2:
          server = context$2$0.sent;

          driver = _wd2['default'].promiseChainRemote(_helpersSession.HOST, _helpersSession.PORT);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(server.close());

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[0, 5]]);
  });
  describe('createSession', function () {
    describe('success', function () {
      afterEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.prev = 0;
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.quit());

            case 3:
              context$4$0.next = 7;
              break;

            case 5:
              context$4$0.prev = 5;
              context$4$0.t0 = context$4$0['catch'](0);

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this, [[0, 5]]);
      });

      it('should start android session focusing on default activity', function callee$3$0() {
        var status, activity;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

            case 2:
              status = context$4$0.sent;

              status[1].app.should.eql(_desired.APIDEMO_CAPS.app);

              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

            case 6:
              activity = context$4$0.sent;

              activity.should.equal('.ApiDemos');

            case 8:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
      it('should start android session focusing on specified activity', function callee$3$0() {
        var status, activity;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.init(_Object$assign({
                appActivity: 'io.appium.android.apis.accessibility.AccessibilityNodeProviderActivity'
              }, _desired.APIDEMO_CAPS)));

            case 2:
              status = context$4$0.sent;

              status[1].app.should.eql(_desired.APIDEMO_CAPS.app);

              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

            case 6:
              activity = context$4$0.sent;

              activity.should.equal('.accessibility.AccessibilityNodeProviderActivity');

            case 8:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
      it('should start subsequent sessions with different apps', function callee$3$0() {
        var status, activity;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.init(_desired.GPS_CAPS));

            case 2:
              status = context$4$0.sent;

              status[1].app.should.eql(_desired.GPS_CAPS.app);

              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

            case 6:
              activity = context$4$0.sent;

              activity.should.equal('.GPSTest');

              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.quit());

            case 10:
              context$4$0.next = 12;
              return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

            case 12:
              status = context$4$0.sent;

              status[1].app.should.eql(_desired.APIDEMO_CAPS.app);

              context$4$0.next = 16;
              return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

            case 16:
              activity = context$4$0.sent;

              activity.should.equal('.ApiDemos');

            case 18:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
    });
    describe('failure', function () {
      it('should reject start session for non-existent activity', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.init(_Object$assign({
                appActivity: 'io.appium.android.apis.some.fake.Activity'
              }, _desired.APIDEMO_CAPS)).should.eventually.be.rejectedWith(/unable to resolve/i));

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
      it('should reject opening of appPackage with incorrect signature', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.init(_Object$assign({
                appPackage: 'com.android.settings'
              }, _desired.APIDEMO_CAPS)).should.eventually.be.rejectedWith(/does not have a signature matching/i));

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
    });
  });
  describe('.startActivity', function () {
    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.prev = 0;
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.quit());

          case 3:
            context$3$0.next = 7;
            break;

          case 5:
            context$3$0.prev = 5;
            context$3$0.t0 = context$3$0['catch'](0);

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this, [[0, 5]]);
    });
    it('should start activity by name', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity({ appActivity: '.accessibility.AccessibilityNodeProviderActivity' }));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity().should.eventually.eql('.accessibility.AccessibilityNodeProviderActivity'));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should start activity by fully-qualified name', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity({ appActivity: 'io.appium.android.apis.accessibility.AccessibilityNodeProviderActivity' }));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity().should.eventually.eql('.accessibility.AccessibilityNodeProviderActivity'));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('keys', function () {
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.init(_extends({}, _desired.APIDEMO_CAPS, {
              appActivity: 'io.appium.android.apis.view.AutoComplete1'
            })));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.quit());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should send keys to focused-on element', function callee$2$0() {
      var editEl;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.keys("Hello World!".split("")));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.elementByXPath("//android.widget.AutoCompleteTextView"));

          case 4:
            editEl = context$3$0.sent;
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(editEl.text().should.eventually.equal('Hello World!'));

          case 7:
            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(editEl.clear());

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should do long press keycode', function callee$2$0() {
      var KEYCODE_G, META_SHIFT_MASK, sessionId, endpoints, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, endpoint, options, editEl;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            KEYCODE_G = 35;
            META_SHIFT_MASK = 193;
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.getSessionId());

          case 4:
            sessionId = context$3$0.sent;
            endpoints = ["long_press_keycode", "press_keycode"];
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$3$0.prev = 9;
            _iterator = _getIterator(endpoints);

          case 11:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              context$3$0.next = 26;
              break;
            }

            endpoint = _step.value;
            options = {
              method: 'POST',
              uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/appium/device/' + endpoint,
              body: {
                keycode: KEYCODE_G,
                metastate: 0 | META_SHIFT_MASK
              },
              json: true
            };
            context$3$0.next = 16;
            return _regeneratorRuntime.awrap((0, _request2['default'])(options));

          case 16:
            context$3$0.next = 18;
            return _regeneratorRuntime.awrap(driver.elementByXPath("//android.widget.AutoCompleteTextView"));

          case 18:
            editEl = context$3$0.sent;
            context$3$0.next = 21;
            return _regeneratorRuntime.awrap(editEl.text().should.eventually.equal(endpoint === 'press_keycode' ? 'G' : 'GG'));

          case 21:
            context$3$0.next = 23;
            return _regeneratorRuntime.awrap(editEl.clear());

          case 23:
            _iteratorNormalCompletion = true;
            context$3$0.next = 11;
            break;

          case 26:
            context$3$0.next = 32;
            break;

          case 28:
            context$3$0.prev = 28;
            context$3$0.t0 = context$3$0['catch'](9);
            _didIteratorError = true;
            _iteratorError = context$3$0.t0;

          case 32:
            context$3$0.prev = 32;
            context$3$0.prev = 33;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 35:
            context$3$0.prev = 35;

            if (!_didIteratorError) {
              context$3$0.next = 38;
              break;
            }

            throw _iteratorError;

          case 38:
            return context$3$0.finish(35);

          case 39:
            return context$3$0.finish(32);

          case 40:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this, [[9, 28, 32, 40], [33,, 35, 39]]);
    });
  });
});

// for now the activity needs to be fully qualified

// for now the activity needs to be fully qualified
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7a0JBQzlCLElBQUk7Ozs7dUJBQ0MsU0FBUzs7Ozs4QkFDRixtQkFBbUI7O3VCQUNQLFdBQVc7O2dCQUN0QixPQUFPOztBQUduQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZO0FBQ3JDLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxNQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsUUFBTSxDQUFDOzs7OzsyQ0FDVSw4REFBdUI7OztBQUF0QyxnQkFBTTs7QUFDTixnQkFBTSxHQUFHLGdCQUFHLGtCQUFrQiw0Q0FBWSxDQUFDOzs7Ozs7O0dBQzVDLENBQUMsQ0FBQztBQUNILE9BQUssQ0FBQzs7Ozs7OzJDQUVJLE1BQU0sQ0FBQyxLQUFLLEVBQUU7Ozs7Ozs7Ozs7Ozs7OztHQUV2QixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMsZUFBZSxFQUFFLFlBQVk7QUFDcEMsWUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZO0FBQzlCLGVBQVMsQ0FBQzs7Ozs7OytDQUVBLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7Ozs7Ozs7OztPQUV0QixDQUFDLENBQUM7O0FBRUgsUUFBRSxDQUFDLDJEQUEyRCxFQUFFO1lBQzFELE1BQU0sRUFJTixRQUFROzs7OzsrQ0FKTyxNQUFNLENBQUMsSUFBSSx1QkFBYzs7O0FBQXhDLG9CQUFNOztBQUVWLG9CQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQWEsR0FBRyxDQUFDLENBQUM7OzsrQ0FFdEIsTUFBTSxDQUFDLHdCQUF3QixFQUFFOzs7QUFBbEQsc0JBQVE7O0FBQ1osc0JBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzs7Ozs7O09BQ3BDLENBQUMsQ0FBQztBQUNILFFBQUUsQ0FBQyw2REFBNkQsRUFBRTtZQUU1RCxNQUFNLEVBTU4sUUFBUTs7Ozs7K0NBTk8sTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFjO0FBQzNDLDJCQUFXLEVBQUUsd0VBQXdFO2VBQ3RGLHdCQUFlLENBQUM7OztBQUZiLG9CQUFNOztBQUlWLG9CQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQWEsR0FBRyxDQUFDLENBQUM7OzsrQ0FFdEIsTUFBTSxDQUFDLHdCQUF3QixFQUFFOzs7QUFBbEQsc0JBQVE7O0FBQ1osc0JBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7Ozs7Ozs7T0FDM0UsQ0FBQyxDQUFDO0FBQ0gsUUFBRSxDQUFDLHNEQUFzRCxFQUFFO1lBQ3JELE1BQU0sRUFJTixRQUFROzs7OzsrQ0FKTyxNQUFNLENBQUMsSUFBSSxtQkFBVTs7O0FBQXBDLG9CQUFNOztBQUVWLG9CQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsa0JBQVMsR0FBRyxDQUFDLENBQUM7OzsrQ0FFbEIsTUFBTSxDQUFDLHdCQUF3QixFQUFFOzs7QUFBbEQsc0JBQVE7O0FBQ1osc0JBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDOzs7K0NBRTVCLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7K0NBRUosTUFBTSxDQUFDLElBQUksdUJBQWM7OztBQUF4QyxvQkFBTTs7QUFFTixvQkFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHNCQUFhLEdBQUcsQ0FBQyxDQUFDOzs7K0NBRTFCLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRTs7O0FBQWxELHNCQUFROztBQUNSLHNCQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQzs7Ozs7OztPQUNwQyxDQUFDLENBQUM7S0FDSixDQUFDLENBQUM7QUFDSCxZQUFRLENBQUMsU0FBUyxFQUFFLFlBQVk7QUFDOUIsUUFBRSxDQUFDLHVEQUF1RCxFQUFFOzs7OzsrQ0FFcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFjO0FBQzlCLDJCQUFXLEVBQUUsMkNBQTJDO2VBQ3pELHdCQUFlLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUM7Ozs7Ozs7T0FDMUUsQ0FBQyxDQUFDO0FBQ0gsUUFBRSxDQUFDLDhEQUE4RCxFQUFFOzs7OzsrQ0FDM0QsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFjO0FBQzlCLDBCQUFVLEVBQUUsc0JBQXNCO2VBQ25DLHdCQUFlLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMscUNBQXFDLENBQUM7Ozs7Ozs7T0FDM0YsQ0FBQyxDQUFDO0tBQ0osQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0FBQ0gsVUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7QUFDckMsYUFBUyxDQUFDOzs7Ozs7NkNBRUEsTUFBTSxDQUFDLElBQUksRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0tBRXRCLENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQywrQkFBK0IsRUFBRTs7Ozs7NkNBQzVCLE1BQU0sQ0FBQyxJQUFJLHVCQUFjOzs7OzZDQUN6QixNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUMsV0FBVyxFQUFFLGtEQUFrRCxFQUFDLENBQUM7Ozs7NkNBQ3ZGLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxDQUFDOzs7Ozs7O0tBQ2xILENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQywrQ0FBK0MsRUFBRTs7Ozs7NkNBQzVDLE1BQU0sQ0FBQyxJQUFJLHVCQUFjOzs7OzZDQUN6QixNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUMsV0FBVyxFQUFFLHdFQUF3RSxFQUFDLENBQUM7Ozs7NkNBQzdHLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxDQUFDOzs7Ozs7O0tBQ2xILENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztBQUNILFVBQVEsQ0FBQyxNQUFNLEVBQUUsWUFBWTtBQUMzQixVQUFNLENBQUM7Ozs7OzZDQUNDLE1BQU0sQ0FBQyxJQUFJO0FBRWYseUJBQVcsRUFBRSwyQ0FBMkM7ZUFDeEQ7Ozs7Ozs7S0FDSCxDQUFDLENBQUM7QUFDSCxTQUFLLENBQUM7Ozs7OzZDQUNFLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7S0FDcEIsQ0FBQyxDQUFDO0FBQ0gsTUFBRSxDQUFDLHdDQUF3QyxFQUFFO1VBRXJDLE1BQU07Ozs7OzZDQUROLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs2Q0FDdEIsTUFBTSxDQUFDLGNBQWMsQ0FBQyx1Q0FBdUMsQ0FBQzs7O0FBQTdFLGtCQUFNOzs2Q0FDTixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDOzs7OzZDQUNyRCxNQUFNLENBQUMsS0FBSyxFQUFFOzs7Ozs7O0tBQ3JCLENBQUMsQ0FBQzs7QUFFSCxNQUFFLENBQUMsOEJBQThCLEVBQUU7VUFDM0IsU0FBUyxFQUNULGVBQWUsRUFDakIsU0FBUyxFQUVQLFNBQVMsa0ZBQ04sUUFBUSxFQUNULE9BQU8sRUFVUCxNQUFNOzs7OztBQWhCUixxQkFBUyxHQUFHLEVBQUU7QUFDZCwyQkFBZSxHQUFHLEdBQUc7OzZDQUNMLE1BQU0sQ0FBQyxZQUFZLEVBQUU7OztBQUF2QyxxQkFBUztBQUVQLHFCQUFTLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRSxlQUFlLENBQUM7Ozs7O3FDQUNwQyxTQUFTOzs7Ozs7OztBQUFyQixvQkFBUTtBQUNULG1CQUFPLEdBQUc7QUFDZCxvQkFBTSxFQUFFLE1BQU07QUFDZCxpQkFBRyx1RkFBMkMsU0FBUyx1QkFBa0IsUUFBUSxBQUFFO0FBQ25GLGtCQUFJLEVBQUU7QUFDSix1QkFBTyxFQUFFLFNBQVM7QUFDbEIseUJBQVMsRUFBRSxDQUFDLEdBQUcsZUFBZTtlQUMvQjtBQUNELGtCQUFJLEVBQUUsSUFBSTthQUNYOzs2Q0FDSywwQkFBUSxPQUFPLENBQUM7Ozs7NkNBQ0QsTUFBTSxDQUFDLGNBQWMsQ0FBQyx1Q0FBdUMsQ0FBQzs7O0FBQTdFLGtCQUFNOzs2Q0FDTixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsUUFBUSxLQUFLLGVBQWUsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDOzs7OzZDQUNoRixNQUFNLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRXZCLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvZHJpdmVyLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHdkIGZyb20gJ3dkJztcbmltcG9ydCByZXF1ZXN0IGZyb20gJ3JlcXVlc3QnO1xuaW1wb3J0IHsgSE9TVCwgUE9SVCB9IGZyb20gJy4vaGVscGVycy9zZXNzaW9uJztcbmltcG9ydCB7IEFQSURFTU9fQ0FQUywgR1BTX0NBUFMgfSBmcm9tICcuL2Rlc2lyZWQnO1xuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIgfSBmcm9tICcuLi8uLic7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ0VzcHJlc3NvRHJpdmVyJywgZnVuY3Rpb24gKCkge1xuICBsZXQgZHJpdmVyO1xuICBsZXQgc2VydmVyO1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIHNlcnZlciA9IGF3YWl0IHN0YXJ0U2VydmVyKFBPUlQsIEhPU1QpO1xuICAgIGRyaXZlciA9IHdkLnByb21pc2VDaGFpblJlbW90ZShIT1NULCBQT1JUKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgc2VydmVyLmNsb3NlKCk7XG4gICAgfSBjYXRjaCAoaWduKSB7fVxuICB9KTtcbiAgZGVzY3JpYmUoJ2NyZWF0ZVNlc3Npb24nLCBmdW5jdGlvbiAoKSB7XG4gICAgZGVzY3JpYmUoJ3N1Y2Nlc3MnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhZnRlckVhY2goYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGF3YWl0IGRyaXZlci5xdWl0KCk7XG4gICAgICAgIH0gY2F0Y2ggKGlnbikge31cbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHN0YXJ0IGFuZHJvaWQgc2Vzc2lvbiBmb2N1c2luZyBvbiBkZWZhdWx0IGFjdGl2aXR5JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgc3RhdHVzID0gYXdhaXQgZHJpdmVyLmluaXQoQVBJREVNT19DQVBTKTtcblxuICAgICAgICBzdGF0dXNbMV0uYXBwLnNob3VsZC5lcWwoQVBJREVNT19DQVBTLmFwcCk7XG5cbiAgICAgICAgbGV0IGFjdGl2aXR5ID0gYXdhaXQgZHJpdmVyLmdldEN1cnJlbnREZXZpY2VBY3Rpdml0eSgpO1xuICAgICAgICBhY3Rpdml0eS5zaG91bGQuZXF1YWwoJy5BcGlEZW1vcycpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHN0YXJ0IGFuZHJvaWQgc2Vzc2lvbiBmb2N1c2luZyBvbiBzcGVjaWZpZWQgYWN0aXZpdHknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIGZvciBub3cgdGhlIGFjdGl2aXR5IG5lZWRzIHRvIGJlIGZ1bGx5IHF1YWxpZmllZFxuICAgICAgICBsZXQgc3RhdHVzID0gYXdhaXQgZHJpdmVyLmluaXQoT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgYXBwQWN0aXZpdHk6ICdpby5hcHBpdW0uYW5kcm9pZC5hcGlzLmFjY2Vzc2liaWxpdHkuQWNjZXNzaWJpbGl0eU5vZGVQcm92aWRlckFjdGl2aXR5J1xuICAgICAgICB9LCBBUElERU1PX0NBUFMpKTtcblxuICAgICAgICBzdGF0dXNbMV0uYXBwLnNob3VsZC5lcWwoQVBJREVNT19DQVBTLmFwcCk7XG5cbiAgICAgICAgbGV0IGFjdGl2aXR5ID0gYXdhaXQgZHJpdmVyLmdldEN1cnJlbnREZXZpY2VBY3Rpdml0eSgpO1xuICAgICAgICBhY3Rpdml0eS5zaG91bGQuZXF1YWwoJy5hY2Nlc3NpYmlsaXR5LkFjY2Vzc2liaWxpdHlOb2RlUHJvdmlkZXJBY3Rpdml0eScpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHN0YXJ0IHN1YnNlcXVlbnQgc2Vzc2lvbnMgd2l0aCBkaWZmZXJlbnQgYXBwcycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IHN0YXR1cyA9IGF3YWl0IGRyaXZlci5pbml0KEdQU19DQVBTKTtcblxuICAgICAgICBzdGF0dXNbMV0uYXBwLnNob3VsZC5lcWwoR1BTX0NBUFMuYXBwKTtcblxuICAgICAgICBsZXQgYWN0aXZpdHkgPSBhd2FpdCBkcml2ZXIuZ2V0Q3VycmVudERldmljZUFjdGl2aXR5KCk7XG4gICAgICAgIGFjdGl2aXR5LnNob3VsZC5lcXVhbCgnLkdQU1Rlc3QnKTtcblxuICAgICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuXG4gICAgICAgIHN0YXR1cyA9IGF3YWl0IGRyaXZlci5pbml0KEFQSURFTU9fQ0FQUyk7XG5cbiAgICAgICAgc3RhdHVzWzFdLmFwcC5zaG91bGQuZXFsKEFQSURFTU9fQ0FQUy5hcHApO1xuXG4gICAgICAgIGFjdGl2aXR5ID0gYXdhaXQgZHJpdmVyLmdldEN1cnJlbnREZXZpY2VBY3Rpdml0eSgpO1xuICAgICAgICBhY3Rpdml0eS5zaG91bGQuZXF1YWwoJy5BcGlEZW1vcycpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ2ZhaWx1cmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpdCgnc2hvdWxkIHJlamVjdCBzdGFydCBzZXNzaW9uIGZvciBub24tZXhpc3RlbnQgYWN0aXZpdHknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIGZvciBub3cgdGhlIGFjdGl2aXR5IG5lZWRzIHRvIGJlIGZ1bGx5IHF1YWxpZmllZFxuICAgICAgICBhd2FpdCBkcml2ZXIuaW5pdChPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBhcHBBY3Rpdml0eTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMuc29tZS5mYWtlLkFjdGl2aXR5J1xuICAgICAgICB9LCBBUElERU1PX0NBUFMpKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoL3VuYWJsZSB0byByZXNvbHZlL2kpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHJlamVjdCBvcGVuaW5nIG9mIGFwcFBhY2thZ2Ugd2l0aCBpbmNvcnJlY3Qgc2lnbmF0dXJlJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgICBhd2FpdCBkcml2ZXIuaW5pdChPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBhcHBQYWNrYWdlOiAnY29tLmFuZHJvaWQuc2V0dGluZ3MnLFxuICAgICAgICB9LCBBUElERU1PX0NBUFMpKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoL2RvZXMgbm90IGhhdmUgYSBzaWduYXR1cmUgbWF0Y2hpbmcvaSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG4gIGRlc2NyaWJlKCcuc3RhcnRBY3Rpdml0eScsIGZ1bmN0aW9uICgpIHtcbiAgICBhZnRlckVhY2goYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgZHJpdmVyLnF1aXQoKTtcbiAgICAgIH0gY2F0Y2ggKGlnbikge31cbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGFjdGl2aXR5IGJ5IG5hbWUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuaW5pdChBUElERU1PX0NBUFMpO1xuICAgICAgYXdhaXQgZHJpdmVyLnN0YXJ0QWN0aXZpdHkoe2FwcEFjdGl2aXR5OiAnLmFjY2Vzc2liaWxpdHkuQWNjZXNzaWJpbGl0eU5vZGVQcm92aWRlckFjdGl2aXR5J30pO1xuICAgICAgYXdhaXQgZHJpdmVyLmdldEN1cnJlbnREZXZpY2VBY3Rpdml0eSgpLnNob3VsZC5ldmVudHVhbGx5LmVxbCgnLmFjY2Vzc2liaWxpdHkuQWNjZXNzaWJpbGl0eU5vZGVQcm92aWRlckFjdGl2aXR5Jyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBzdGFydCBhY3Rpdml0eSBieSBmdWxseS1xdWFsaWZpZWQgbmFtZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5pbml0KEFQSURFTU9fQ0FQUyk7XG4gICAgICBhd2FpdCBkcml2ZXIuc3RhcnRBY3Rpdml0eSh7YXBwQWN0aXZpdHk6ICdpby5hcHBpdW0uYW5kcm9pZC5hcGlzLmFjY2Vzc2liaWxpdHkuQWNjZXNzaWJpbGl0eU5vZGVQcm92aWRlckFjdGl2aXR5J30pO1xuICAgICAgYXdhaXQgZHJpdmVyLmdldEN1cnJlbnREZXZpY2VBY3Rpdml0eSgpLnNob3VsZC5ldmVudHVhbGx5LmVxbCgnLmFjY2Vzc2liaWxpdHkuQWNjZXNzaWJpbGl0eU5vZGVQcm92aWRlckFjdGl2aXR5Jyk7XG4gICAgfSk7XG4gIH0pO1xuICBkZXNjcmliZSgna2V5cycsIGZ1bmN0aW9uICgpIHtcbiAgICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgYXdhaXQgZHJpdmVyLmluaXQoe1xuICAgICAgICAuLi5BUElERU1PX0NBUFMsXG4gICAgICAgIGFwcEFjdGl2aXR5OiAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcy52aWV3LkF1dG9Db21wbGV0ZTEnXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBhZnRlcihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgc2VuZCBrZXlzIHRvIGZvY3VzZWQtb24gZWxlbWVudCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5rZXlzKFwiSGVsbG8gV29ybGQhXCIuc3BsaXQoXCJcIikpO1xuICAgICAgY29uc3QgZWRpdEVsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeVhQYXRoKFwiLy9hbmRyb2lkLndpZGdldC5BdXRvQ29tcGxldGVUZXh0Vmlld1wiKTtcbiAgICAgIGF3YWl0IGVkaXRFbC50ZXh0KCkuc2hvdWxkLmV2ZW50dWFsbHkuZXF1YWwoJ0hlbGxvIFdvcmxkIScpO1xuICAgICAgYXdhaXQgZWRpdEVsLmNsZWFyKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGRvIGxvbmcgcHJlc3Mga2V5Y29kZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IEtFWUNPREVfRyA9IDM1O1xuICAgICAgY29uc3QgTUVUQV9TSElGVF9NQVNLID0gMTkzO1xuICAgICAgbGV0IHNlc3Npb25JZCA9IGF3YWl0IGRyaXZlci5nZXRTZXNzaW9uSWQoKTtcblxuICAgICAgY29uc3QgZW5kcG9pbnRzID0gW1wibG9uZ19wcmVzc19rZXljb2RlXCIsIFwicHJlc3Nfa2V5Y29kZVwiXTtcbiAgICAgIGZvciAobGV0IGVuZHBvaW50IG9mIGVuZHBvaW50cykge1xuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIHVyaTogYGh0dHA6Ly8ke0hPU1R9OiR7UE9SVH0vd2QvaHViL3Nlc3Npb24vJHtzZXNzaW9uSWR9L2FwcGl1bS9kZXZpY2UvJHtlbmRwb2ludH1gLFxuICAgICAgICAgIGJvZHk6IHtcbiAgICAgICAgICAgIGtleWNvZGU6IEtFWUNPREVfRyxcbiAgICAgICAgICAgIG1ldGFzdGF0ZTogMCB8IE1FVEFfU0hJRlRfTUFTSyxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGpzb246IHRydWUsXG4gICAgICAgIH07XG4gICAgICAgIGF3YWl0IHJlcXVlc3Qob3B0aW9ucyk7XG4gICAgICAgIGNvbnN0IGVkaXRFbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vYW5kcm9pZC53aWRnZXQuQXV0b0NvbXBsZXRlVGV4dFZpZXdcIik7XG4gICAgICAgIGF3YWl0IGVkaXRFbC50ZXh0KCkuc2hvdWxkLmV2ZW50dWFsbHkuZXF1YWwoZW5kcG9pbnQgPT09ICdwcmVzc19rZXljb2RlJyA/ICdHJyA6ICdHRycpO1xuICAgICAgICBhd2FpdCBlZGl0RWwuY2xlYXIoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
