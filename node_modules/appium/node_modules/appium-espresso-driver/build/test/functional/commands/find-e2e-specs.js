'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('elementByXPath', function () {
  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(_desired.APIDEMO_CAPS));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should find an element by it\'s xpath', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='Animation']"));

        case 2:
          el = context$2$0.sent;

          el.should.exist;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(el.click());

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.back());

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should find multiple elements that match one xpath', function callee$1$0() {
    var els;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementsByXPath('//android.widget.TextView'));

        case 2:
          els = context$2$0.sent;

          els.length.should.be.above(1);
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(els[0].click());

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.back());

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should get the first element of an xpath that matches more than one element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//android.widget.TextView'));

        case 2:
          el = context$2$0.sent;

          el.should.exist;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(el.click());

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.back());

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should throw a stale element exception if clicking on element that does not exist', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@content-desc='Animation']"));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(el.click().should.eventually.be.rejectedWith(/no longer exists /));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.back());

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should get the isDisplayed attribute on the same element twice', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@content-desc='Animation']"));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.isDisplayed().should.eventually.be['true']);

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(el.isDisplayed().should.eventually.be['true']);

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(el.click());

        case 9:
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(driver.back());

        case 11:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should match an element if the element is off-screen but has an accessibility id', function callee$1$0() {
    var el, moveToEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Views'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('WebView'));

        case 7:
          moveToEl = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(moveToEl.click());

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(driver.back());

        case 12:
          context$2$0.next = 14;
          return _regeneratorRuntime.awrap(driver.back());

        case 14:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should test element equality', function callee$1$0() {
    var el, elAgain, elNonMatch;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Views'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@content-desc='Views']"));

        case 5:
          elAgain = context$2$0.sent;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Preference'));

        case 8:
          elNonMatch = context$2$0.sent;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(el.equals(elAgain).should.eventually.be['true']);

        case 11:
          context$2$0.next = 13;
          return _regeneratorRuntime.awrap(el.equals(elNonMatch).should.eventually.be['false']);

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});

// Click on an element that is at the bottom of the list
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9maW5kLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7OzhCQUNhLG9CQUFvQjs7dUJBQ2pELFlBQVk7O0FBR3pDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7QUFDckMsTUFBSSxDQUFDLE9BQU8sK0JBQWUsQ0FBQzs7QUFFNUIsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQzs7Ozs7MkNBQ1UsdURBQXlCOzs7QUFBeEMsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLG9DQUFlOzs7Ozs7O0dBQ3RCLENBQUMsQ0FBQztBQUNILElBQUUsMENBQXlDO1FBQ3JDLEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsd0JBQXdCLENBQUM7OztBQUExRCxZQUFFOztBQUNOLFlBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzsyQ0FDVixFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNWLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLG9EQUFvRCxFQUFFO1FBQ25ELEdBQUc7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxlQUFlLENBQUMsMkJBQTJCLENBQUM7OztBQUEvRCxhQUFHOztBQUNQLGFBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7OzJDQUN4QixHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNkLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLDZFQUE2RSxFQUFFO1FBQzVFLEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsMkJBQTJCLENBQUM7OztBQUE3RCxZQUFFOztBQUNOLFlBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzsyQ0FDVixFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNWLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLG1GQUFtRixFQUFFO1FBQ2xGLEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsZ0NBQWdDLENBQUM7OztBQUFsRSxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNWLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQUM7Ozs7MkNBQ2pFLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLGdFQUFnRSxFQUFFO1FBQy9ELEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsZ0NBQWdDLENBQUM7OztBQUFsRSxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLFFBQUs7Ozs7MkNBQzFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBSzs7OzsyQ0FDMUMsRUFBRSxDQUFDLEtBQUssRUFBRTs7OzsyQ0FDVixNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7O0dBQ3BCLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyxrRkFBa0YsRUFBRTtRQUNqRixFQUFFLEVBSUYsUUFBUTs7Ozs7MkNBSkcsTUFBTSxDQUFDLHdCQUF3QixDQUFDLE9BQU8sQ0FBQzs7O0FBQW5ELFlBQUU7OzJDQUNBLEVBQUUsQ0FBQyxLQUFLLEVBQUU7Ozs7MkNBR0ssTUFBTSxDQUFDLHdCQUF3QixDQUFDLFNBQVMsQ0FBQzs7O0FBQTNELGtCQUFROzsyQ0FDTixRQUFRLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNoQixNQUFNLENBQUMsSUFBSSxFQUFFOzs7OzJDQUNiLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLDhCQUE4QixFQUFFO1FBQzdCLEVBQUUsRUFDRixPQUFPLEVBQ1AsVUFBVTs7Ozs7MkNBRkMsTUFBTSxDQUFDLHdCQUF3QixDQUFDLE9BQU8sQ0FBQzs7O0FBQW5ELFlBQUU7OzJDQUNjLE1BQU0sQ0FBQyxjQUFjLENBQUMsNEJBQTRCLENBQUM7OztBQUFuRSxpQkFBTzs7MkNBQ1ksTUFBTSxDQUFDLHdCQUF3QixDQUFDLFlBQVksQ0FBQzs7O0FBQWhFLG9CQUFVOzsyQ0FDUixFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFLOzs7OzJDQUM1QyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxTQUFNOzs7Ozs7O0dBQ3ZELENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvZmluZC1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB7IGluaXRTZXNzaW9uLCBkZWxldGVTZXNzaW9uLCBNT0NIQV9USU1FT1VUIH0gZnJvbSAnLi4vaGVscGVycy9zZXNzaW9uJztcbmltcG9ydCB7IEFQSURFTU9fQ0FQUyB9IGZyb20gJy4uL2Rlc2lyZWQnO1xuXG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdlbGVtZW50QnlYUGF0aCcsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuXG4gIGxldCBkcml2ZXI7XG4gIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdFNlc3Npb24oQVBJREVNT19DQVBTKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCBkZWxldGVTZXNzaW9uKCk7XG4gIH0pO1xuICBpdChgc2hvdWxkIGZpbmQgYW4gZWxlbWVudCBieSBpdCdzIHhwYXRoYCwgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vKltAdGV4dD0nQW5pbWF0aW9uJ11cIik7XG4gICAgZWwuc2hvdWxkLmV4aXN0O1xuICAgIGF3YWl0IGVsLmNsaWNrKCk7XG4gICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZmluZCBtdWx0aXBsZSBlbGVtZW50cyB0aGF0IG1hdGNoIG9uZSB4cGF0aCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgZWxzID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRzQnlYUGF0aCgnLy9hbmRyb2lkLndpZGdldC5UZXh0VmlldycpO1xuICAgIGVscy5sZW5ndGguc2hvdWxkLmJlLmFib3ZlKDEpO1xuICAgIGF3YWl0IGVsc1swXS5jbGljaygpO1xuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGdldCB0aGUgZmlyc3QgZWxlbWVudCBvZiBhbiB4cGF0aCB0aGF0IG1hdGNoZXMgbW9yZSB0aGFuIG9uZSBlbGVtZW50JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aCgnLy9hbmRyb2lkLndpZGdldC5UZXh0VmlldycpO1xuICAgIGVsLnNob3VsZC5leGlzdDtcbiAgICBhd2FpdCBlbC5jbGljaygpO1xuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHRocm93IGEgc3RhbGUgZWxlbWVudCBleGNlcHRpb24gaWYgY2xpY2tpbmcgb24gZWxlbWVudCB0aGF0IGRvZXMgbm90IGV4aXN0JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vKltAY29udGVudC1kZXNjPSdBbmltYXRpb24nXVwiKTtcbiAgICBhd2FpdCBlbC5jbGljaygpO1xuICAgIGF3YWl0IGVsLmNsaWNrKCkuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC9ubyBsb25nZXIgZXhpc3RzIC8pO1xuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGdldCB0aGUgaXNEaXNwbGF5ZWQgYXR0cmlidXRlIG9uIHRoZSBzYW1lIGVsZW1lbnQgdHdpY2UnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeVhQYXRoKFwiLy8qW0Bjb250ZW50LWRlc2M9J0FuaW1hdGlvbiddXCIpO1xuICAgIGF3YWl0IGVsLmlzRGlzcGxheWVkKCkuc2hvdWxkLmV2ZW50dWFsbHkuYmUudHJ1ZTtcbiAgICBhd2FpdCBlbC5pc0Rpc3BsYXllZCgpLnNob3VsZC5ldmVudHVhbGx5LmJlLnRydWU7XG4gICAgYXdhaXQgZWwuY2xpY2soKTtcbiAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBtYXRjaCBhbiBlbGVtZW50IGlmIHRoZSBlbGVtZW50IGlzIG9mZi1zY3JlZW4gYnV0IGhhcyBhbiBhY2Nlc3NpYmlsaXR5IGlkJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlBY2Nlc3NpYmlsaXR5SWQoJ1ZpZXdzJyk7XG4gICAgYXdhaXQgZWwuY2xpY2soKTtcblxuICAgIC8vIENsaWNrIG9uIGFuIGVsZW1lbnQgdGhhdCBpcyBhdCB0aGUgYm90dG9tIG9mIHRoZSBsaXN0XG4gICAgbGV0IG1vdmVUb0VsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeUFjY2Vzc2liaWxpdHlJZCgnV2ViVmlldycpO1xuICAgIGF3YWl0IG1vdmVUb0VsLmNsaWNrKCk7XG4gICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcbiAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCB0ZXN0IGVsZW1lbnQgZXF1YWxpdHknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeUFjY2Vzc2liaWxpdHlJZCgnVmlld3MnKTtcbiAgICBsZXQgZWxBZ2FpbiA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vKltAY29udGVudC1kZXNjPSdWaWV3cyddXCIpO1xuICAgIGxldCBlbE5vbk1hdGNoID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeUFjY2Vzc2liaWxpdHlJZCgnUHJlZmVyZW5jZScpO1xuICAgIGF3YWl0IGVsLmVxdWFscyhlbEFnYWluKS5zaG91bGQuZXZlbnR1YWxseS5iZS50cnVlO1xuICAgIGF3YWl0IGVsLmVxdWFscyhlbE5vbk1hdGNoKS5zaG91bGQuZXZlbnR1YWxseS5iZS5mYWxzZTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
