'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _xmldom = require('xmldom');

var _xpath = require('xpath');

var _xpath2 = _interopRequireDefault(_xpath);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('source commands', function () {
  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  describe('regular app', function () {
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(_desired.APIDEMO_CAPS));

          case 2:
            driver = context$3$0.sent;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should get sourceXML, parse it, and find a node by xpath', function callee$2$0() {
      var sourceXML, doc, node;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.source());

          case 2:
            sourceXML = context$3$0.sent;

            sourceXML.should.be.a.string;
            doc = new _xmldom.DOMParser().parseFromString(sourceXML, 'test/xml');
            node = _xpath2['default'].select('//*[content-desc=Animation]', doc);

            node.should.exist;

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });

  // TODO: where is the app for this?
  describe.skip('react native app', function () {
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(_desired.REACT_NATIVE_CAPS));

          case 2:
            driver = context$3$0.sent;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should get sourceXML with view-tags', function callee$2$0() {
      var sourceXML, doc, node;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.source());

          case 2:
            sourceXML = context$3$0.sent;

            sourceXML.should.be.a.string;
            doc = new _xmldom.DOMParser().parseFromString(sourceXML, 'test/xml');
            node = _xpath2['default'].select('//*[content-desc=Animation]', doc);

            node.should.exist;

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9zb3VyY2UtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7c0JBQ25CLFFBQVE7O3FCQUNoQixPQUFPOzs7OzhCQUNpQyxvQkFBb0I7O3VCQUM5QixZQUFZOztBQUc1RCxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFZO0FBQ3RDLE1BQUksQ0FBQyxPQUFPLCtCQUFlLENBQUM7O0FBRTVCLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxVQUFRLENBQUMsYUFBYSxFQUFFLFlBQVk7QUFDbEMsVUFBTSxDQUFDOzs7Ozs2Q0FDVSx1REFBeUI7OztBQUF4QyxrQkFBTTs7Ozs7OztLQUNQLENBQUMsQ0FBQztBQUNILFNBQUssQ0FBQzs7Ozs7NkNBQ0Usb0NBQWU7Ozs7Ozs7S0FDdEIsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQywwREFBMEQsRUFBRTtVQUN2RCxTQUFTLEVBRVQsR0FBRyxFQUNILElBQUk7Ozs7OzZDQUhjLE1BQU0sQ0FBQyxNQUFNLEVBQUU7OztBQUFqQyxxQkFBUzs7QUFDZixxQkFBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUN2QixlQUFHLEdBQUcsdUJBQWUsQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQztBQUM1RCxnQkFBSSxHQUFHLG1CQUFNLE1BQU0sQ0FBQyw2QkFBNkIsRUFBRSxHQUFHLENBQUM7O0FBQzdELGdCQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Ozs7OztLQUNuQixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7OztBQUdILFVBQVEsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtBQUM1QyxVQUFNLENBQUM7Ozs7OzZDQUNVLDREQUE4Qjs7O0FBQTdDLGtCQUFNOzs7Ozs7O0tBQ1AsQ0FBQyxDQUFDO0FBQ0gsU0FBSyxDQUFDOzs7Ozs2Q0FDRSxvQ0FBZTs7Ozs7OztLQUN0QixDQUFDLENBQUM7O0FBRUgsTUFBRSxDQUFDLHFDQUFxQyxFQUFFO1VBQ2xDLFNBQVMsRUFFVCxHQUFHLEVBQ0gsSUFBSTs7Ozs7NkNBSGMsTUFBTSxDQUFDLE1BQU0sRUFBRTs7O0FBQWpDLHFCQUFTOztBQUNmLHFCQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQ3ZCLGVBQUcsR0FBRyx1QkFBZSxDQUFDLGVBQWUsQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDO0FBQzVELGdCQUFJLEdBQUcsbUJBQU0sTUFBTSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsQ0FBQzs7QUFDN0QsZ0JBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzs7Ozs7O0tBQ25CLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvc291cmNlLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IHsgRE9NUGFyc2VyIH0gZnJvbSAneG1sZG9tJztcbmltcG9ydCB4cGF0aCBmcm9tICd4cGF0aCc7XG5pbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgeyBBUElERU1PX0NBUFMsIFJFQUNUX05BVElWRV9DQVBTIH0gZnJvbSAnLi4vZGVzaXJlZCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ3NvdXJjZSBjb21tYW5kcycsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuXG4gIGxldCBkcml2ZXI7XG4gIGRlc2NyaWJlKCdyZWd1bGFyIGFwcCcsIGZ1bmN0aW9uICgpIHtcbiAgICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgZHJpdmVyID0gYXdhaXQgaW5pdFNlc3Npb24oQVBJREVNT19DQVBTKTtcbiAgICB9KTtcbiAgICBhZnRlcihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkZWxldGVTZXNzaW9uKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGdldCBzb3VyY2VYTUwsIHBhcnNlIGl0LCBhbmQgZmluZCBhIG5vZGUgYnkgeHBhdGgnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCBzb3VyY2VYTUwgPSBhd2FpdCBkcml2ZXIuc291cmNlKCk7XG4gICAgICBzb3VyY2VYTUwuc2hvdWxkLmJlLmEuc3RyaW5nO1xuICAgICAgY29uc3QgZG9jID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhzb3VyY2VYTUwsICd0ZXN0L3htbCcpO1xuICAgICAgY29uc3Qgbm9kZSA9IHhwYXRoLnNlbGVjdCgnLy8qW2NvbnRlbnQtZGVzYz1BbmltYXRpb25dJywgZG9jKTtcbiAgICAgIG5vZGUuc2hvdWxkLmV4aXN0O1xuICAgIH0pO1xuICB9KTtcblxuICAvLyBUT0RPOiB3aGVyZSBpcyB0aGUgYXBwIGZvciB0aGlzP1xuICBkZXNjcmliZS5za2lwKCdyZWFjdCBuYXRpdmUgYXBwJywgZnVuY3Rpb24gKCkge1xuICAgIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBkcml2ZXIgPSBhd2FpdCBpbml0U2Vzc2lvbihSRUFDVF9OQVRJVkVfQ0FQUyk7XG4gICAgfSk7XG4gICAgYWZ0ZXIoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgYXdhaXQgZGVsZXRlU2Vzc2lvbigpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBnZXQgc291cmNlWE1MIHdpdGggdmlldy10YWdzJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3Qgc291cmNlWE1MID0gYXdhaXQgZHJpdmVyLnNvdXJjZSgpO1xuICAgICAgc291cmNlWE1MLnNob3VsZC5iZS5hLnN0cmluZztcbiAgICAgIGNvbnN0IGRvYyA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoc291cmNlWE1MLCAndGVzdC94bWwnKTtcbiAgICAgIGNvbnN0IG5vZGUgPSB4cGF0aC5zZWxlY3QoJy8vKltjb250ZW50LWRlc2M9QW5pbWF0aW9uXScsIGRvYyk7XG4gICAgICBub2RlLnNob3VsZC5leGlzdDtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
